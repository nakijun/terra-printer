#include <TdkLayoutTypes.h>
#include <TdkImageProperty.h>
#include <TdkGdiImage.h>


///////////////////////////////////////////////////////////////////////////////
//Constructor
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
TdkImageProperty::TdkImageProperty()
{
	_propertyName="TdkImage_Property";
	_image=0;
	_type=PBinary;
}

///////////////////////////////////////////////////////////////////////////////
//Destructor
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
TdkImageProperty::~TdkImageProperty()
{
	if(_image) delete _image;
}

///////////////////////////////////////////////////////////////////////////////
//Set Angle Value
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////

void TdkImageProperty::setValue(const std::string &value)
{
	unsigned char	*buff;
	unsigned int	i,j;
	char			c;

	buff=new unsigned char[(int) value.size()/2];
	for(j=0,i=0;i<value.size();i+=2,j++)
	{
		if(value[i] < 65)	c=(value[i]  - 48);
		else				c=(value[i]  - 55);
		
		c=c<<4;

		if(value[i+1]<65)	c|=(value[i+1] - 48);
		else				c|=(value[i+1] - 55);
		buff[j]=c;
	}

	if(_image == 0)	_image=new TdkGdiImage("LMemory");
	_image->setIStream(buff,(unsigned long)(value.size()/2));
	delete buff;
}

///////////////////////////////////////////////////////////////////////////////
//Returns the image as array
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////

unsigned char* TdkImageProperty::getArrayValue(unsigned long &size)
{
	if(_image) return _image->getIstream(size);
	return 0;
}


///////////////////////////////////////////////////////////////////////////////
//Equal Operator
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////

TdkImageProperty& TdkImageProperty::operator=(const TdkImageProperty &other)
{
	_image=other._image->clone();
	return *this;
}

///////////////////////////////////////////////////////////////////////////////
//Equal Operator
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////

TdkImageProperty& TdkImageProperty::operator=(const TdkAbstractProperty &other)
{
	_image=((TdkImageProperty&)other)._image->clone();
	return *this;
}

///////////////////////////////////////////////////////////////////////////////
//Create Image
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
void TdkImageProperty::Create(const std::string &fileName)
{
	_image=new TdkGdiImage(fileName);
}

///////////////////////////////////////////////////////////////////////////////
//Returns the Image
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
TdkGdiImage* TdkImageProperty::getImage()
{
	return _image;
}

///////////////////////////////////////////////////////////////////////////////
//Clear
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
void TdkImageProperty::Clear()
{
	if(_image)	delete _image;
	_image=0;
	
}

///////////////////////////////////////////////////////////////////////////////
//Get Width Image
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
double TdkImageProperty::getWidth()
{
	return (_image == 0 ? 0 :_image->getWidth());
}

///////////////////////////////////////////////////////////////////////////////
//Get Height Image
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
double TdkImageProperty::getHeight()
{
	return (_image == 0 ? 0 : _image->getHeight());
}

///////////////////////////////////////////////////////////////////////////////
//Get File Name
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
std::string TdkImageProperty::getFileName()
{
	return (_image == 0 ? "" : _image->getFileName());
}

///////////////////////////////////////////////////////////////////////////////
//Sets the file name
//Author : Rui Mauricio Gregório 
//Date : 09/2010
///////////////////////////////////////////////////////////////////////////////
void TdkImageProperty::setFileName(const std::string &fileName)
{
	if(_image != 0) _image->setFileName(fileName);
}

void TdkImageProperty::setAbstractFileName(const std::string &fileName)
{
	if(_image != 0) _image->setAbstractFileName(fileName);
}